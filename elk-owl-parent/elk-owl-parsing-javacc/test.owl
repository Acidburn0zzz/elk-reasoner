ClassAssertion(<http://example.com/owl/families/Father> <http://example.com/owl/families/John>)
Declaration(Class(<http://example.com/owl/families/Dead>))
Declaration(Class(<http://example.com/owl/families/YoungChild>))
ClassAssertion(<http://example.com/owl/families/Woman> <http://example.com/owl/families/Mary>)
IrreflexiveObjectProperty(<http://example.com/owl/families/parentOf>)
Declaration(Class(<http://example.com/owl/families/Teenager>))
Declaration(NamedIndividual(<http://example.com/owl/families/John>))
ClassAssertion(<http://example.com/owl/families/SocialRole> <http://example.com/owl/families/Father>)
FunctionalObjectProperty(<http://example.com/owl/families/hasHusband>)
DatatypeDefinition( <http://example.com/owl/families/majorAge> DataIntersectionOf(<http://example.com/owl/families/personAge> DataComplementOf(<http://example.com/owl/families/minorAge>)) )
ObjectPropertyRange(<http://example.com/owl/families/hasWife> <http://example.com/owl/families/Woman>)
FunctionalDataProperty(<http://example.com/owl/families/hasAge>)
DisjointClasses(<http://example.com/owl/families/Mother> <http://example.com/owl/families/Father> <http://example.com/owl/families/YoungChild>)
EquivalentClasses(<http://example.com/owl/families/Orphan> ObjectAllValuesFrom(ObjectInverseOf(<http://example.com/owl/families/hasChild>) <http://example.com/owl/families/Dead>))
SameIndividual(<http://example.com/owl/families/John> <http://example.com/owl/families/Jack>)
ClassAssertion(ObjectIntersectionOf(<http://example.com/owl/families/Person> ObjectComplementOf(<http://example.com/owl/families/Parent>)) <http://example.com/owl/families/Jack>)
DisjointObjectProperties(<http://example.com/owl/families/hasSon> <http://example.com/owl/families/hasDaughter>)
Declaration(Class(<http://example.com/owl/families/Man>))
EquivalentClasses(<http://example.com/owl/families/NarcisticPerson> ObjectHasSelf(<http://example.com/owl/families/loves>))
Declaration(NamedIndividual(<http://example.com/owl/families/Susan>))
DisjointObjectProperties(<http://example.com/owl/families/hasChild> <http://example.org/otherOntologies/families/child>)
SubClassOf(<http://example.com/owl/families/Teenager> DataSomeValuesFrom(<http://example.com/owl/families/hasAge> DatatypeRestriction(<http://www.w3.org/2001/XMLSchema#integer> <http://www.w3.org/2001/XMLSchema#minExclusive> "12"^^<http://www.w3.org/2001/XMLSchema#integer> <http://www.w3.org/2001/XMLSchema#maxInclusive> "19"^^<http://www.w3.org/2001/XMLSchema#integer>)))
Declaration(NamedIndividual(<http://example.com/owl/families/Bill>))
Declaration(ObjectProperty(<http://example.com/owl/families/hasAncestor>))
Declaration(ObjectProperty(<http://example.com/owl/families/hasChild>))
NegativeDataPropertyAssertion(<http://example.com/owl/families/hasAge> <http://example.com/owl/families/Jack> "53"^^<http://www.w3.org/2001/XMLSchema#integer>)
Declaration(Class(<http://example.com/owl/families/MyBirthdayGuests>))
Declaration(Class(<http://example.com/owl/families/HappyPerson>))
ClassAssertion(ObjectMinCardinality(2 <http://example.com/owl/families/hasChild> <http://example.com/owl/families/Parent>) <http://example.com/owl/families/John>)
Declaration(Class(<http://example.com/owl/families/Mother>))
Declaration(ObjectProperty(<http://example.com/owl/families/hasGrandparent>))
EquivalentClasses(<http://example.com/owl/families/Adult> <http://example.org/otherOntologies/families/Grownup>)
DataPropertyDomain(<http://example.com/owl/families/hasAge> <http://example.com/owl/families/Person>)
ReflexiveObjectProperty(<http://example.com/owl/families/hasRelative>)
Declaration(Class(<http://example.com/owl/families/Parent>))
SubClassOf(<http://example.com/owl/families/Woman> <http://example.com/owl/families/Person>)
DatatypeDefinition( <http://example.com/owl/families/toddlerAge> DataOneOf("1"^^<http://www.w3.org/2001/XMLSchema#integer> "2"^^<http://www.w3.org/2001/XMLSchema#integer>) )
SameIndividual(<http://example.com/owl/families/Mary> <http://example.org/otherOntologies/families/MaryBrown>)
Declaration(Class(<http://example.com/owl/families/JohnsChildren>))
Declaration(Datatype(<http://example.com/owl/families/majorAge>))
ObjectPropertyDomain(<http://example.com/owl/families/hasWife> <http://example.com/owl/families/Man>)
SubClassOf(<http://example.com/owl/families/Mother> <http://example.com/owl/families/Woman>)

Declaration(ObjectProperty(<http://example.com/owl/families/hasParent>))
SubObjectPropertyOf(ObjectPropertyChain(<http://example.com/owl/families/hasParent> <http://example.com/owl/families/hasParent>) <http://example.com/owl/families/hasGrandparent>)
DisjointClasses(<http://example.com/owl/families/Woman> <http://example.com/owl/families/Man>)
Declaration(Class(<http://example.com/owl/families/NarcisticPerson>))
EquivalentClasses(<http://example.com/owl/families/ChildlessPerson> ObjectIntersectionOf(<http://example.com/owl/families/Person> ObjectComplementOf(<http://example.com/owl/families/Parent>)))
SubClassOf(<http://example.com/owl/families/Man> <http://example.com/owl/families/Person>)
EquivalentClasses(<http://example.com/owl/families/Mother> ObjectIntersectionOf(<http://example.com/owl/families/Woman> <http://example.com/owl/families/Parent>))
EquivalentClasses(<http://example.com/owl/families/HappyPerson> ObjectIntersectionOf(ObjectAllValuesFrom(<http://example.com/owl/families/hasChild> <http://example.com/owl/families/HappyPerson>) ObjectSomeValuesFrom(<http://example.com/owl/families/hasChild> <http://example.com/owl/families/HappyPerson>)))
SubObjectPropertyOf(<http://example.com/owl/families/hasFather> <http://example.com/owl/families/hasParent>)
Declaration(Class(<http://example.com/owl/families/ChildlessPerson>))
SubObjectPropertyOf(ObjectPropertyChain(<http://example.com/owl/families/hasFather> <http://example.com/owl/families/hasBrother>) <http://example.com/owl/families/hasUncle>)
EquivalentClasses(<http://example.com/owl/families/MyBirthdayGuests> ObjectOneOf(<http://example.com/owl/families/Bill> <http://example.com/owl/families/John> <http://example.com/owl/families/Mary>))
AsymmetricObjectProperty(<http://example.com/owl/families/hasChild>)
Declaration(Class(<http://example.com/owl/families/Human>))
ObjectPropertyAssertion(<http://example.com/owl/families/hasWife> <http://example.com/owl/families/John> <http://example.com/owl/families/Mary>)
SubClassOf(<http://example.com/owl/families/Father> ObjectIntersectionOf(<http://example.com/owl/families/Man> <http://example.com/owl/families/Parent>))
Declaration(ObjectProperty(<http://example.com/owl/families/hasWife>))
Declaration(Class(<http://example.com/owl/families/Female>))
Declaration(Datatype(<http://example.com/owl/families/toddlerAge>))
Declaration(NamedIndividual(<http://example.com/owl/families/James>))
DataPropertyAssertion(<http://example.com/owl/families/hasAge> <http://example.com/owl/families/John> "51"^^<http://www.w3.org/2001/XMLSchema#integer>)
SubObjectPropertyOf(<http://example.com/owl/families/hasWife> <http://example.com/owl/families/hasSpouse>)
SymmetricObjectProperty(<http://example.com/owl/families/hasSpouse>)
Declaration(Class(<http://example.com/owl/families/Woman>))
EquivalentClasses(<http://example.com/owl/families/Person> <http://example.com/owl/families/Human>)
Declaration(ObjectProperty(<http://example.com/owl/families/hasSpouse>))
Declaration(NamedIndividual(<http://example.com/owl/families/Jack>))
Declaration(DataProperty(<http://example.com/owl/families/hasAge>))
SameIndividual(<http://example.com/owl/families/John> <http://example.org/otherOntologies/families/JohnBrown>)
SubClassOf(<http://example.com/owl/families/Grandfather> ObjectIntersectionOf(<http://example.com/owl/families/Man> <http://example.com/owl/families/Parent>))
DisjointObjectProperties(<http://example.com/owl/families/hasParent> <http://example.com/owl/families/hasSpouse>)
Declaration(Class(<http://example.com/owl/families/Person>))
TransitiveObjectProperty(<http://example.com/owl/families/hasAncestor>)
Declaration(DataProperty(<http://example.com/owl/families/hasSSN>))
DatatypeDefinition( <http://example.com/owl/families/personAge> DatatypeRestriction(<http://www.w3.org/2001/XMLSchema#integer> <http://www.w3.org/2001/XMLSchema#minInclusive> "0"^^<http://www.w3.org/2001/XMLSchema#integer> <http://www.w3.org/2001/XMLSchema#maxInclusive> "150"^^<http://www.w3.org/2001/XMLSchema#integer>) )
Declaration(Class(<http://example.com/owl/families/SocialRole>))
EquivalentDataProperties(<http://example.com/owl/families/hasAge> <http://example.org/otherOntologies/families/age>)
ClassAssertion(ObjectMaxCardinality(4 <http://example.com/owl/families/hasChild> <http://example.com/owl/families/Parent>) <http://example.com/owl/families/John>)
Declaration(ObjectProperty(<http://example.com/owl/families/hasUncle>))
ClassAssertion(<http://example.com/owl/families/Person> <http://example.com/owl/families/Mary>)
InverseFunctionalObjectProperty(<http://example.com/owl/families/hasHusband>)
Declaration(Class(<http://example.com/owl/families/Father>))
Declaration(Datatype(<http://example.com/owl/families/personAge>))
Declaration(NamedIndividual(<http://example.com/owl/families/Mary>))
ClassAssertion(ObjectExactCardinality(5 <http://example.com/owl/families/hasChild>) <http://example.com/owl/families/John>)
EquivalentClasses(<http://example.com/owl/families/Parent> ObjectSomeValuesFrom(<http://example.com/owl/families/hasChild> <http://example.com/owl/families/Person>))
SubClassOf(ObjectIntersectionOf(ObjectOneOf(<http://example.com/owl/families/Mary> <http://example.com/owl/families/Bill> <http://example.com/owl/families/Meg>) <http://example.com/owl/families/Female>) ObjectIntersectionOf(<http://example.com/owl/families/Parent> ObjectMaxCardinality(1 <http://example.com/owl/families/hasChild>) ObjectAllValuesFrom(<http://example.com/owl/families/hasChild> <http://example.com/owl/families/Female>)))
EquivalentClasses(<http://example.com/owl/families/JohnsChildren> ObjectHasValue(<http://example.com/owl/families/hasParent> <http://example.com/owl/families/John>))
DataPropertyRange(<http://example.com/owl/families/hasAge> <http://www.w3.org/2001/XMLSchema#nonNegativeInteger>)
ClassAssertion(ObjectExactCardinality(3 <http://example.com/owl/families/hasChild> <http://example.com/owl/families/Parent>) <http://example.com/owl/families/John>)
Declaration(ObjectProperty(<http://example.com/owl/families/hasSon>))
DifferentIndividuals(<http://example.com/owl/families/John> <http://example.com/owl/families/Bill>)
Declaration(ObjectProperty(<http://example.com/owl/families/hasBrother>))
Declaration(NamedIndividual(<http://example.com/owl/families/Jim>))
Declaration(Class(<http://example.com/owl/families/Orphan>))
EquivalentClasses(<http://example.com/owl/families/Parent> ObjectUnionOf(<http://example.com/owl/families/Mother> <http://example.com/owl/families/Father>))
NegativeObjectPropertyAssertion(<http://example.com/owl/families/hasWife> <http://example.com/owl/families/Bill> <http://example.com/owl/families/Mary>)
Declaration(Class(<http://example.com/owl/families/Adult>))
NegativeObjectPropertyAssertion(<http://example.com/owl/families/hasDaughter> <http://example.com/owl/families/Bill> <http://example.com/owl/families/Susan>)
InverseObjectProperties(<http://example.com/owl/families/hasParent> <http://example.com/owl/families/hasChild>)
HasKey( <http://example.com/owl/families/Person> (  )( <http://example.com/owl/families/hasSSN> )) 
EquivalentClasses(<http://example.com/owl/families/Parent> ObjectSomeValuesFrom(<http://example.com/owl/families/hasChild> <http://example.com/owl/families/Person>))
SubClassOf(<http://example.com/owl/families/ChildlessPerson> ObjectIntersectionOf(<http://example.com/owl/families/Person> ObjectComplementOf(ObjectSomeValuesFrom(ObjectInverseOf(<http://example.com/owl/families/hasParent>) <http://www.w3.org/2002/07/owl#Thing>))))
Declaration(ObjectProperty(<http://example.com/owl/families/hasHusband>))
Declaration(ObjectProperty(<http://example.com/owl/families/hasDaughter>))
Declaration(ObjectProperty(<http://example.com/owl/families/loves>))
